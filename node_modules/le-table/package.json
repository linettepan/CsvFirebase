{
  "_args": [
    [
      {
        "raw": "le-table@^2.1.0",
        "scope": null,
        "escapedName": "le-table",
        "name": "le-table",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/ryry/Desktop/GatheringToDatabase/node_modules/clp"
    ]
  ],
  "_from": "le-table@>=2.1.0 <3.0.0",
  "_id": "le-table@2.2.0",
  "_inCache": true,
  "_location": "/le-table",
  "_npmUser": {
    "name": "ionicabizau",
    "email": "bizauionica@gmail.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "le-table@^2.1.0",
    "scope": null,
    "escapedName": "le-table",
    "name": "le-table",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/clp"
  ],
  "_resolved": "https://registry.npmjs.org/le-table/-/le-table-2.2.0.tgz",
  "_shasum": "5dadd29cf819bed536e3d4014282044a60296f79",
  "_shrinkwrap": null,
  "_spec": "le-table@^2.1.0",
  "_where": "/Users/ryry/Desktop/GatheringToDatabase/node_modules/clp",
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/IonicaBizau/node-le-table/issues"
  },
  "contributors": [
    {
      "name": "Adam Paszke",
      "email": "gracz1500@gmail.com"
    }
  ],
  "dependencies": {
    "cli-box": "^2.1.1",
    "overlap": "^1.5.0",
    "ul": "2.1.0"
  },
  "description": "Another NodeJS module for creating ASCII tables.",
  "devDependencies": {},
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "5dadd29cf819bed536e3d4014282044a60296f79",
    "tarball": "https://registry.npmjs.org/le-table/-/le-table-2.2.0.tgz"
  },
  "gitHead": "cda96c611e294db1c5e33658ca0888a21c3e3ce6",
  "homepage": "https://github.com/IonicaBizau/node-le-table",
  "keywords": [
    "table",
    "ascii",
    "node",
    "cli"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ionicabizau",
      "email": "bizauionica@yahoo.com"
    }
  ],
  "name": "le-table",
  "optionalDependencies": {},
  "readme": "![](http://i.imgur.com/BKXaFAa.png)\n\nAnother NodeJS module for creating ASCII tables.\n\n## Example\n\n```js\n// Dependencies\nvar Table = require(\"le-table\");\n\n// Table data\nvar data = [\n    [\"Cell 1.1\", \"Cell 2.1\", \"Cell 3.1\"]\n  , [\"Cell 1.2\", {\n        text: \"Multi\\nline\\n\\u001b[34mcell\\ncontent that\\u001b[0m is\\n left aligned.\"\n      , data: {\n            hAlign: \"left\"\n        }\n    }, \"Cell 3.2\"]\n  , [\"Cell 1.3\", \"Cell 2.3\", \"Cell 3.3\"]\n  , [\"Cell 1.4\", \"Cell 2.4\", \"Cell 3.4\"]\n];\n\n// Table defaults\nTable.defaults.marks = {\n    nw: \"┌\"\n  , n:  \"─\"\n  , ne: \"┐\"\n  , e:  \"│\"\n  , se: \"┘\"\n  , s:  \"─\"\n  , sw: \"└\"\n  , w:  \"│\"\n  , b: \" \"\n  , mt: \"┬\"\n  , ml: \"├\"\n  , mr: \"┤\"\n  , mb: \"┴\"\n  , mm: \"┼\"\n};\n\n// Create table instance\nvar myTable = new Table();\n\n// Push data\nfor (var i = 0; i < data.length; ++i) {\n    myTable.addRow([i].concat(data[i]), {\n        hAlign: i > 2 ? \"left\": \"right\"\n    });\n}\n\n// Output table\nconsole.log(myTable.toString());\n```\n\nThe output will be:\n\n![](http://i.imgur.com/vC3U1ZD.png)\n\n## Installation\n\n```sh\n$ npm install le-table\n```\n\n## Documentation\n### `LeTable(options)`\nCreates a new instance of `LeTable`.\n\n#### Params\n- **Object** `options`: An object containing the table configuration:\n  - `cell`: object containing\n    - `hAlign` (default: `\"center\"`): One of the following values: `\"left\"`, `\"center\"` and `\"right\"`\n    - `vAlign` (default: `\"middle\"`): One of the following values: `\"top\"`, `\"middle\"` and `\"bottom\"`\n    - `autoEOL` (default: `true`): if true, the lines are wrapped inside of the cell\n    - `stretch` (default: `true`): if true, the size of the box will not be fixed\n  - `marks`: object containing the mark characters (see example)\n\n#### Return\n- **LeTable** The `LeTable` instance.\n\n### `addRow(columns, ops)`\nAdds a new row in table.\n\n#### Params\n- **Array** `columns`: Row data (as array)\n- **Object** `ops`: Options for cell content\n\n#### Return\n- **LeTable** The `LeTable` instance.\n\n### `toString()`\nStringifies the table.\n\n#### Return\n- **String** The stringified table\n\n## Changelog\nSee the [releases](/releases) page.\n\n## How to contribute\n1. File an issue in the repository, using the bug tracker, describing the\n   contribution you'd like to make. This will help us to get you started on the\n   right foot.\n2. Fork the project in your account and create a new branch:\n   `your-great-feature`.\n3. Commit your changes in that branch.\n4. Open a pull request, and reference the initial issue in the pull request\n   message.\n\n## License\nSee the [LICENSE](./LICENSE) file.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/IonicaBizau/node-le-table.git"
  },
  "scripts": {
    "test": "node example"
  },
  "version": "2.2.0"
}
